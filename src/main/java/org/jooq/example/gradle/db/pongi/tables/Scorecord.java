/**
 * This class is generated by jOOQ
 */
package org.jooq.example.gradle.db.pongi.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.example.gradle.db.pongi.Keys;
import org.jooq.example.gradle.db.pongi.Pongi;
import org.jooq.example.gradle.db.pongi.tables.records.ScorecordRecord;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Scorecord extends TableImpl<ScorecordRecord> {

	private static final long serialVersionUID = -1421130012;

	/**
	 * The reference instance of <code>pongi.SCORECORD</code>
	 */
	public static final Scorecord SCORECORD = new Scorecord();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ScorecordRecord> getRecordType() {
		return ScorecordRecord.class;
	}

	/**
	 * The column <code>pongi.SCORECORD.user</code>.
	 */
	public final TableField<ScorecordRecord, String> USER = createField("user", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

	/**
	 * The column <code>pongi.SCORECORD.won</code>.
	 */
	public final TableField<ScorecordRecord, Byte> WON = createField("won", org.jooq.impl.SQLDataType.TINYINT, this, "");

	/**
	 * The column <code>pongi.SCORECORD.scoredPoint</code>.
	 */
	public final TableField<ScorecordRecord, Integer> SCOREDPOINT = createField("scoredPoint", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>pongi.SCORECORD.lostPoint</code>.
	 */
	public final TableField<ScorecordRecord, Integer> LOSTPOINT = createField("lostPoint", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>pongi.SCORECORD.gameID</code>.
	 */
	public final TableField<ScorecordRecord, String> GAMEID = createField("gameID", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

	/**
	 * Create a <code>pongi.SCORECORD</code> table reference
	 */
	public Scorecord() {
		this("SCORECORD", null);
	}

	/**
	 * Create an aliased <code>pongi.SCORECORD</code> table reference
	 */
	public Scorecord(String alias) {
		this(alias, SCORECORD);
	}

	private Scorecord(String alias, Table<ScorecordRecord> aliased) {
		this(alias, aliased, null);
	}

	private Scorecord(String alias, Table<ScorecordRecord> aliased, Field<?>[] parameters) {
		super(alias, Pongi.PONGI, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ScorecordRecord> getPrimaryKey() {
		return Keys.KEY_SCORECORD_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ScorecordRecord>> getKeys() {
		return Arrays.<UniqueKey<ScorecordRecord>>asList(Keys.KEY_SCORECORD_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Scorecord as(String alias) {
		return new Scorecord(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Scorecord rename(String name) {
		return new Scorecord(name, null);
	}
}
